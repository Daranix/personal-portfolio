---

import { getRelativeLocaleUrl } from 'astro:i18n';
import { Icon } from "astro-icon/components";
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import { languages } from '@/i18n/ui';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---


<script>

    const translationMenuBtn = document.getElementById("translateBtn");
    translationMenuBtn?.addEventListener('click', () => {
        const menu = document.getElementById("translation-menu");
        menu?.classList.toggle('block');
        menu?.classList.toggle('hidden');
    });

    if(!getCookie('theme')) {
        const theme = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)') ? 'dark' : 'light');
        if(theme === 'dark') {
            document.querySelector('html')?.classList.add('dark');
        }
        setCookie('theme', theme, 99999);
    }

    function setCookie(cname: string, cvalue: string, exdays: number) {
        const d = new Date();
        d.setTime(d.getTime() + (exdays*24*60*60*1000));
        let expires = "expires="+ d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }

    function getCookie(cname: string) {
        let name = cname + "=";
        let decodedCookie = decodeURIComponent(document.cookie);
        let ca = decodedCookie.split(';');
        for(let i = 0; i <ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }

        return undefined;
    }

    const toggleThemeBtn = document.getElementById("toggleThemeBtn");
    toggleThemeBtn?.addEventListener('click', () => {
        const currentTheme = getCookie('theme') || (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)') ? 'dark' : 'light');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        if(newTheme === 'dark') {
            document.querySelector('html')?.classList.add('dark');
        } else {
            document.querySelector('html')?.classList.remove('dark')
        }
        setCookie('theme', newTheme, 99999);
    });
</script>

<header
    class="w-full h-[5rem] flex justify-center dark:bg-gray-800 bg-opacity-70 dark:bg-opacity-70 sticky top-0 left-0 z-10 backdrop-blur-lg subpixel-antialiased"
>
    <nav
        class="w-full h-full flex items-center justify-between py-1 px-5 max-w-5xl xl:max-w-7xl"
    >
        <div class="w-7 h-7 bg-dusky flex items-center justify-center p-4 rounded-sm dark:bg-gray-600 dark:opacity-75 bg-black text-white font-semibold">
            <span class="text-md font-semibold dark:text-dusky">E<span class="text-yellow-400">M</span></span>
        </div>
        <div class="flex items-center gap-4">
            <div>
                <button title="Change language" id="translateBtn" class="text-xl rounded-full p-3 hover:bg-slate-200 dark:hover:bg-gray-800 hover:bg-opacity-30">
                    <Icon name="mdi:translate" />
                </button>
                <div class="sticky top-14 z-10 animate-collapsible-down duration-1000 transition-opacity hidden" id="translation-menu">
                    <div class="absolute inline-block bg-white dark:bg-gray-800 rounded-xl pt-3 pb-3 z-40 shadow-sm dark:shadow-lg">
                        <ul class="font-semibold flex flex-col gap-2">
                            {languages.map((v) => {
                                return (
                                    <li>
                                        <a class="pl-3 pr-3 hover:opacity-50" href={getRelativeLocaleUrl(v)}>{t('navbar.langs.' + v as any)}</a>
                                    </li>
                                )
                            })}
                        </ul>
                    </div>
                </div>                
            </div>

            <button title="Switch to dark theme" id="toggleThemeBtn">
                <Icon name="moon" class="w-6 h-6 fill-current text-sun-beam active:rotate-[360deg] transition-all duration-300  inline-block dark:hidden" />
                <Icon name="sun" class="w-6 h-6 fill-current text-sun-beam active:rotate-[360deg] transition-all duration-300 dark:inline-block hidden text-yellow-600" />
            </button>
        </div>
    </nav>
</header>

